- content_for :title do
	== Edit "#{resource.title}" on BlackDog Property
	
- content_for :meta_description do
	== Edit "#{resource.title}" on BlackDog Property

- content_for :link_canonical do
	== member/properties/#{resource.id}/edit?section=#{params[:section]}

- content_for :edit_property_nav do
	= render_navigation(:context => :property)
	
- content_for :scripts do
	= render 'shared/member/property/charcount'


= form_for [:member, resource], :html => { :autocomplete => "off" } do |f|

	= hidden_field_tag "section", params[:section] if action_name == 'edit'
	= f.hidden_field(:id, :value => resource.id, :id => "stored_id", :name => "stored[id]") if action_name == 'edit'
	= f.hidden_field(:title, :value => resource.title, :id => "stored_title", :name => "stored[title]") if action_name == 'edit'


	-if params[:section] == 'details'
		%section#type
			.box
				.top
					%h2.step Listing Type
				.middle
					%table.property.edit
						= render 'shared/member/property/type', :f => f
		
		%section#description
			.box
				.top
					%h2.step Description
				.middle
					%table.property.edit
						= render 'shared/member/property/title', :f => f
						= render 'shared/member/property/description', :f => f
		
		%section#amenities
			.box
				.top
					%h2.step Amenities & Facilities
				.middle
					%table
						- @count = 1
						- @divisions.each do |d|
							- if @count == 3
								%tr
								-@count = 0
							%td.col_third
								%h2= d.name
								- d.amenities.each do |a|
									%ul.groups
										%li
											= check_box_tag "property[amenity_ids][]", a.id, resource.amenity_ids.include?(a.id), :id => ('property_amenity_ids_' + a.id)
											= f.label a.id, a.name, :for => ('property_amenity_ids_' + a.id)
											- if a.description.present?
												= image_tag "question_mark.png", :class => "question_mark", :rel => "tooltip", "data-original-title" => a.description
											- @count += 1
		
		%section#details
			.box
				.top
					%h2.step Details
				.middle
					%table.property.edit
						= render 'shared/member/property/accommodates', :f => f
						= render 'shared/member/property/bedrooms', :f => f
						= render 'shared/member/property/bathrooms', :f => f
						= render 'shared/member/property/living_room', :f => f
						= render 'shared/member/property/dining_room', :f => f
						= render 'shared/member/property/dining_outdoor', :f => f
						= render 'shared/member/property/sun_loungers', :f => f
						= render 'shared/member/property/balconies', :f => f
						= render 'shared/member/property/terraces', :f => f
						= render 'shared/member/property/sea_views', :f => f
						= render 'shared/member/property/conventions', :f => f
	

	-elsif params[:section] == 'photos'
		%section#uploads
			.box
				.top
					%h2.step Add Photos
				.middle
					= render 'shared/member/property/photos/add'
								
		%section#photos
			.box
				.top
					%h2.step Current Photos
				.padded_text
					= render 'shared/member/property/photos/show'
					
					
	-elsif params[:section] == 'pricing'
		%section#pricing
			.box
				.top
					%h2.step Pricing
				.middle
					%table.property.edit
						= render 'shared/member/property/pricing', :f => f


	-elsif params[:section] == 'settings'
		%section#settings
			.box
				.top
					%h2.step Property Visibility
				.padded_text
					%h3 Property Publish Status
					%p 
						You can choose a status of
						%span.green "Published" 
						or 
						%span.red "Unpublished" 
						for your property.
					%p Unpublished properties can not be found on the public listings, nor can they be found in search results and, thus, will not be associated with your profile. Choose this option while you are preparing your property listing or you currently do not wish to rent out your property.
					
					%p
						To change the publish status of this property, click the
						%span{:style => "color:#97C3D6;"} Property status
						link in the header of this property (above to the right).
				%hr
				.padded_text
					#delete_possible
						%p== If you no longer wish to keep this property listing, you can #{link_to "delete it permanently", "#", :id => :delete_property_step1}.
					#delete_full
						%h3 Delete Property Listing
						%p
							%span{:style => "font-weight:bold;"} IMPORTANT!
							Deleting a listing is permanent and cannot be reversed. You may wish to hide it by unpublishing your listing instead.

							%p If you delete this property listing:

							%ul
								%li It will be deleted from the site forever. You will not be able to retrieve it.
								%li Your other account details will remain unchanged. Your profile and any other properties will continue to be associated with your account.
							
							.delete_agreemment
								= check_box_tag :agree, :yes, false, :id => :delete_agree
								%span.agreement_text I understand that by clicking the button below will completely delete my listing from the site and it cannot be recovered.
								
							.delete_property_button
								= button_to "Delete Property Listing", [:member, resource], :method => :delete, :id => "delete_property_button", :class => 'buttonBasic', :onclick => "this.value = 'Deleting this property'"
				
	-if params[:section] == 'details' || params[:section] == 'pricing'
		/ = render 'member/property/save_button'
		%table
			%tr
				%td{:style => "width: 210px;"}
				%td= button_to "Save to Update", :class => 'button', :onclick => "this.value = 'Updating your account...'"


	-if params[:section] == 'address'
		%section#location
			.box
				.top
					%h2.step Location Information
				.middle.map_view
					.map_box
						%h3.map_description.actual
							%span.change_address
								= link_to "Edit address", "#", :id => :edit_property_address
								= link_to "Cancel", "#", :id => :cancel_edit_property_address
							Actual Address:
							%span.address= private_address(resource)
							%p.note Note: the actual address of the property will only be given to confirmed guests.
						.map_view
							= gmaps(:markers => { :data => @json, |
																		:options => { :picture => "/assets/gmaps/blue-dot.png", |
																									:width => 32, |
																									:length => 32 |
																								} |
																	}, |
											:map_options => { :id => "private_map", |
																				:type => "ROADMAP", |
																				:center_longitude => 180, |
																				:auto_zoom => false, |
																				:zoom => 15, |
																				:auto_adjust => true, |
																				:raw => '{ streetViewControl: false, |
																									 scaleControl: true, |
																									 mapTypeControl: false |
																				 				  }' |
																			}, |
											:last_map => false )
											
					#edit_property_location
						%table{:style => "padding-top:10px;"}
							= render 'shared/member/property/address', :f => f
							%tr
								%td
								%td= button_to "Save to Update", :class => 'buttonBasic', :onclick => "this.value = 'Updating your property...'"
							
					.map_box
						%h3.map_description.public
							Public View:
							%span.address= public_address(resource)
							%p.note This is how the address of the property appears on the public listing.
						.map_view
							= gmaps(:circles => { :data => @circles, |
																		:options => { :fillColor => "#0066FF", |
																									:strokeWeight => 0 |
																								} |
																	}, |
											:map_options => { :id => "public_map", |
																				:type => "ROADMAP", |
																				:center_longitude => 180, |
																				:auto_zoom => false, |
																				:zoom => 14, |
																				:auto_adjust => true, |
																				:raw => '{ streetViewControl: false, |
																									 scaleControl: true, |
																									 mapTypeControl: false |
																				 				 }' |
																			}, |
											:scripts => :none )
